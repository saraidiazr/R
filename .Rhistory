install.packages("rMarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
q()
# Install from CRAN
install.packages('rmarkdown')
# Or if you want to test the development version,
# install from GitHub
if (!requireNamespace("devtools"))
install.packages('devtools')
devtools::install_github('rstudio/rmarkdown')
# Install from CRAN
install.packages('rmarkdown')
# Or if you want to test the development version,
# install from GitHub
if (!requireNamespace("devtools"))
install.packages('devtools')
devtools::install_github('rstudio/rmarkdown')
install.packages('backports')
install.packages("backports")
install.packages('rmarkdown')
# Install from CRAN
install.packages('rmarkdown')
# Or if you want to test the development version,
# install from GitHub
if (!requireNamespace("devtools"))
install.packages('devtools')
devtools::install_github('rstudio/rmarkdown')
install.packages('knitr')
install.packages('rmarkdown')
install.packages("backports")
install.packages("backports")
install.packages('knitr')
install.packages('rmarkdown')
install.packages('DESCRIPTION')
install.packages('DESCRIPTION',repos='http://cran.us.r-project.org')
install.packages('rmarkdown',repos='http://cran.us.r-project.org')
sessionInfo()
Sys.setlocale("LC_ALL","English")
install.packages('rmarkdown',repos='http://cran.us.r-project.org')
install.packages('description',repos='http://cran.us.r-project.org')
Sys.setlocale("LC_ALL","English")
install.packages('DESCRIPTION')
x <- c("12345678-B")
regexpr("[0-9]{8}-*[a-zA-Z]", x)
regexpr([0-9]{8}-*[a-zA-Z],x)
regexpr("[0-9]{8}-*[a-zA-Z]", "18b")
?regexpr()
grep("[a-z]", letters)
regexpr("en", txt)
regexpr("en", "english")
regexpr("en", "glish")
regexpr("[0-9]{8}-*[a-zA-Z]", "af")
regexpr("[0-9]{8}-*[a-zA-Z]", "1234567-b")
x <- c("1234567-b" ,"1234567B" ,"12345678 b" ,"12345678-B" ,"1234567-B")
regexpr("[0-9]{8}-*[a-zA-Z]", x)
colors()
sum(regexpr("[0-9]", colors()))
regexpr("[0-9]", colors())
regexpr("[0-9]", colors()).match.length
q2 <- regexpr("[0-9]", colors())
sum(q2[1])
regexpr("[0-9]", colors())
q2 <- regexpr("[0-9]", colors())
q2
q2[1]
q2
q2[1:51]
q2[1:651]
q2[1:652]
q2[1:658]
q2[1:659]
q2[1:657]
sum(q2[1:657])
sum(q2[1:657] %>% filter(q2[1:657]> 0 ))
q2[1:657] %>% filter(> 0)
filter(q2[1:657] > 0)
colnames(q2)
q <- regexpr("[0-9]", colors=colors())
qq <- q2[1:657]
colnames(qq)
q2[1]
colnames(q2) <- "col"
dim(q2)
q2
dim(qq)
qq
regexpr("[0-9]", c=colors())
x(col) <- regexpr("[0-9]", c=colors())
setwd("~/EAE/Business Performance Analysis/TrabajoFinalR")
setwd("~/EAE/Business Performance Analysis/TrabajoFinalR")
setwd("~/EAE/Business Performance Analysis/TrabajoFinalR")
library(readr)
empleados <- read_delim("empleados.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(empleados)
dim(empleados)
library(readr)
xxx <- read_delim("empleados.csv",";", escape_double = FALSE, trim_ws = TRUE)
dim(xxx)
setwd("~/EAE/Business Performance Analysis/TrabajoFinalR")
x <- read.table("empleados.csv",header=TRUE,sep=",")
dim(x)
x <- read.csv("empleados.csv",header=TRUE,sep=",")
dim(x)
x <- read.csv("empleados.csv",header=TRUE,sep=",")
dim(x)
knitr::opts_chunk$set(echo = TRUE)
x <- read.csv("empleados.csv",header=TRUE,sep=",")
y <- read.csv(url("https://bit.ly/36kJD7f"),header=TRUE,sep=",")
dim(y)
y <- read.csv(url("https://bit.ly/36kJD7f"))
dim(y)
y <- read.csv(url("https://bit.ly/36kJD7f"),sep=",")
y <- read.csv(url("https://bit.ly/36kJD7f"),",")
y <- read.csv(url(https://bit.ly/36kJD7f),sep=",")
y <- read.csv(url("https://bit.ly/36kJD7f"),",")
y <- read.csv(url("https://bit.ly/36kJD7f"))
mydat <- read.csv(textConnection("https://bit.ly/36kJD7f"), header=T)
head(mydat)
y <- read.csv(url("https://bit.ly/36kJD7f"))
y
library(data.table)
mydat <- fread("https://bit.ly/36kJD7f")
head(mydat)
library(data.table)
mydat <- fread('https://bit.ly/36kJD7f')
head(mydat)
library(RCurl)
myfile <- getURL('https://sakai.unc.edu/access/content/group/3d1eb92e-7848-4f55-90c3-7c72a54e7e43/public/data/bycatch.csv'
library(RCurl)
myfile <- getURL("https://bit.ly/36kJD7f")
myfile
library(RCurl)
myfile <- getURL("https://bit.ly/36kJD7f", ssl.verifyhost=FALSE, ssl.verifypeer=FALSE)
myfile
mydat <- read.csv(textConnection(myfile), header=T)
head(mydat)
library(RCurl)
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
x <- getURL(URL)
out <- read.csv(textConnection(x))
dim(out)
library(RCurl)
URL <- "https://bit.ly/36kJD7f"
a <- getURL(URL)
b <- read.csv(textConnection(a))
dim(b)
a
b
library(RCurl)
URL <- "https://drive.google.com/open?id=1FtmcZGvhdVAWPA-N7cxq8vniYA9w8rSb_4X-SJl7nLQ"
a <- getURL(URL)
b <- read.csv(textConnection(a))
dim(b)
library(RCurl)
URL <- "https://bit.ly/2ROfWX1"
a <- getURL(URL)
b <- read.csv(textConnection(a))
dim(b)
library(RCurl)
URL <- "https://drive.google.com/uc?export=download&id=1IH2tucoOw83Bb-dTNpwwkShgyc_ftfag"
a <- getURL(URL)
b <- read.csv(textConnection(a))
dim(b)
a
z <- read.csv("https://bit.ly/2ROfWX1",header=TRUE,sep=",")
dim(z)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
empleados_de_baja <- empleados[,c("antiguedad","sexo","baja","area")]
knitr::opts_chunk$set(echo = TRUE)
empleados <- read.csv("https://bit.ly/37wliwY",header=TRUE,sep=",")
DT::datatable(empleados,
options = list(searching = FALSE
,pageLength = 10
,lengthChange = FALSE
)
)
head(diamonds)
cor(stackloss)
empleados <- read.csv("https://bit.ly/37wliwY",header=TRUE,sep=",")
cor(empleados[,c("antiguedad","sexo","edad","salario")])
cor(empleados[,c("antiguedad",edad","salario")])
empleados[,c("antiguedad",edad","salario")
empleados
head(empleados)
cor(empleados[,c("antiguedad","edad","salario")])
?empleados
typeof(empleados)
typeof(empleados[,c("antiguedad")])
typeof(empleados[,c("edad")])
typeof(empleados[,c("salario")])
cor(empleados[,c("antiguedad","edad","salario")])
cor(empleados[,c("antiguedad")])
cor(empleados[,c("antiguedad","edad")])
cor(empleados[,c("antiguedad","edad","salario")])
cor(empleados[,c("antiguedad","salario")])
cor(empleados[,c("antiguedad","edad","salario")])
sapply(dat[, c("salario")], as.numeric)
sapply(empleados[, c("salario")], as.numeric)
cor(empleados[,c("antiguedad","edad","salario")])
cor(sapply(empleados[, "antiguedad","edad", c("salario")], as.numeric))
cor(sapply(empleados[, "antiguedad","edad", "salario"], as.numeric))
cor(sapply(empleados[, c("antiguedad","edad", "salario")], as.numeric))
cor(sapply(empleados[, c("antiguedad","edad", "sexo", "salario")], as.numeric))
cor(sapply(empleados[, c("antiguedad","edad", "sexo", "salario","evaluacion")], as.numeric))
cor(sapply(empleados[, c("antiguedad","edad", "sexo", "salario","evaluacion")], as.numeric),method = "pearson")
x <- cor(sapply(empleados[, c("antiguedad","edad", "sexo", "salario","evaluacion")], as.numeric),method = "pearson")
plot(x)
library(PerformanceAnalytics)
install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
chart.Correlation(sapply(empleados[, c("antiguedad","edad", "sexo", "salario","evaluacion")], as.numeric))
cor(sapply(empleados[, c("antiguedad","edad", "sexo", "salario","evaluacion")], as.numeric),method = "pearson")
install.packages('DT')
library(DT)
install.packages("DT")
install.packages('DT')
library(DT)
xfun::session_info('DT')
install.packages('rlang')
# install from CRAN
install.packages('DT')
# or the development version if necessary
remotes::install_github('rstudio/DT')
empleados <- read.csv("https://bit.ly/37wliwY",header=TRUE,sep=",")
DT::datatable(empleados,
options = list(searching = FALSE
,pageLength = 10
,lengthChange = FALSE
)
)
unlink('TrabajoFinalR_cache', recursive = TRUE)
rlang:::rlang_is_string
install.packages('rlang')
as.data.frame(installed.packages())
as.data.frame(installed.packages())
list.functions.in.file(filename, alphabetic = TRUE
sessionInfo
sessionInfo
empleados %>% filter(baja=1) %>% select(antiguedad,edad,sexo)
library(tidyverse)
empleados %>% filter(baja=1) %>% select(antiguedad,edad,sexo)
empleados %>% filter(baja==1) %>% select(antiguedad,edad,sexo)
library(tidyverse)
library(ggplot2)
empleados %>% filter(baja==1) %>% select(antiguedad,edad,sexo)
empleados %>% filter(baja==1) %>% select(antiguedad,edad,sexo)
?find.package
rownames(installed.packages())
write.csv(rownames(installed.packages()),"packages_installed.csv")
packages_installed <- ["askpass" ,"assertthat" ,"backports" ,"base" ,"base64enc" ,"BH" ,"bitops" ,"boot" ,"brew" ,"broom" ,"callr" ,"cellranger" ,"class" ,"cli" ,"clipr" ,"clisymbols" ,"cluster" ,"codetools" ,"colorspace" ,"commonmark" ,"compiler" ,"covr" ,"crayon" ,"crosstalk" ,"curl" ,"datasets" ,"DBI" ,"dbplyr" ,"desc" ,"devtools" ,"digest" ,"dplyr" ,"DT" ,"ellipsis" ,"evaluate" ,"fansi" ,"farver" ,"fastmap" ,"forcats" ,"foreign" ,"fs" ,"generics" ,"ggplot2" ,"gh" ,"git2r" ,"glue" ,"graphics" ,"grDevices" ,"grid" ,"gtable" ,"haven" ,"highr" ,"hms" ,"htmltools" ,"htmlwidgets" ,"httpuv" ,"httr" ,"ini" ,"jsonlite" ,"KernSmooth" ,"knitr" ,"labeling" ,"later" ,"lattice" ,"lazyeval" ,"lifecycle" ,"lubridate" ,"magrittr" ,"markdown" ,"MASS" ,"Matrix" ,"memoise" ,"methods" ,"mgcv" ,"mime" ,"modelr" ,"munsell" ,"nlme" ,"nnet" ,"openssl" ,"packrat" ,"parallel" ,"PerformanceAnalytics" ,"pillar" ,"pkgbuild" ,"pkgconfig" ,"pkgload" ,"plogr" ,"plyr" ,"praise" ,"prettyunits" ,"processx" ,"progress" ,"promises" ,"ps" ,"purrr" ,"quadprog" ,"R6" ,"rcmdcheck" ,"RColorBrewer" ,"Rcpp" ,"RCurl" ,"readr" ,"readxl" ,"rematch" ,"remotes" ,"reprex" ,"reshape2" ,"rex" ,"rlang" ,"rmarkdown" ,"roxygen2" ,"rpart" ,"rprojroot" ,"rsconnect" ,"rstudioapi" ,"rversions" ,"rvest" ,"scales" ,"selectr" ,"sessioninfo" ,"shiny" ,"sourcetools" ,"spatial" ,"splines" ,"stats" ,"stats4" ,"stringi" ,"stringr" ,"survival" ,"sys" ,"tcltk" ,"testthat" ,"tibble" ,"tidyr" ,"tidyselect" ,"tidyverse" ,"tinytex" ,"tools" ,"translations" ,"usethis" ,"utf8" ,"utils" ,"vctrs" ,"viridisLite" ,"whisker" ,"withr" ,"xfun" ,"xml2" ,"xopen" ,"xtable" ,"xts" ,"yaml" ,"zeallot" ,"zoo"]
packages_installed <- c("askpass" ,"assertthat" ,"backports" ,"base" ,"base64enc" ,"BH" ,"bitops" ,"boot" ,"brew" ,"broom" ,"callr" ,"cellranger" ,"class" ,"cli" ,"clipr" ,"clisymbols" ,"cluster" ,"codetools" ,"colorspace" ,"commonmark" ,"compiler" ,"covr" ,"crayon" ,"crosstalk" ,"curl" ,"datasets" ,"DBI" ,"dbplyr" ,"desc" ,"devtools" ,"digest" ,"dplyr" ,"DT" ,"ellipsis" ,"evaluate" ,"fansi" ,"farver" ,"fastmap" ,"forcats" ,"foreign" ,"fs" ,"generics" ,"ggplot2" ,"gh" ,"git2r" ,"glue" ,"graphics" ,"grDevices" ,"grid" ,"gtable" ,"haven" ,"highr" ,"hms" ,"htmltools" ,"htmlwidgets" ,"httpuv" ,"httr" ,"ini" ,"jsonlite" ,"KernSmooth" ,"knitr" ,"labeling" ,"later" ,"lattice" ,"lazyeval" ,"lifecycle" ,"lubridate" ,"magrittr" ,"markdown" ,"MASS" ,"Matrix" ,"memoise" ,"methods" ,"mgcv" ,"mime" ,"modelr" ,"munsell" ,"nlme" ,"nnet" ,"openssl" ,"packrat" ,"parallel" ,"PerformanceAnalytics" ,"pillar" ,"pkgbuild" ,"pkgconfig" ,"pkgload" ,"plogr" ,"plyr" ,"praise" ,"prettyunits" ,"processx" ,"progress" ,"promises" ,"ps" ,"purrr" ,"quadprog" ,"R6" ,"rcmdcheck" ,"RColorBrewer" ,"Rcpp" ,"RCurl" ,"readr" ,"readxl" ,"rematch" ,"remotes" ,"reprex" ,"reshape2" ,"rex" ,"rlang" ,"rmarkdown" ,"roxygen2" ,"rpart" ,"rprojroot" ,"rsconnect" ,"rstudioapi" ,"rversions" ,"rvest" ,"scales" ,"selectr" ,"sessioninfo" ,"shiny" ,"sourcetools" ,"spatial" ,"splines" ,"stats" ,"stats4" ,"stringi" ,"stringr" ,"survival" ,"sys" ,"tcltk" ,"testthat" ,"tibble" ,"tidyr" ,"tidyselect" ,"tidyverse" ,"tinytex" ,"tools" ,"translations" ,"usethis" ,"utf8" ,"utils" ,"vctrs" ,"viridisLite" ,"whisker" ,"withr" ,"xfun" ,"xml2" ,"xopen" ,"xtable" ,"xts" ,"yaml" ,"zeallot" ,"zoo")
packages_installed <- c("askpass" ,"assertthat" ,"backports" ,"base" ,"base64enc" ,"BH" ,"bitops" ,"boot" ,"brew" ,"broom" ,"callr" ,"cellranger" ,"class" ,"cli" ,"clipr" ,"clisymbols" ,"cluster" ,"codetools" ,"colorspace" ,"commonmark" ,"compiler" ,"covr" ,"crayon" ,"crosstalk" ,"curl" ,"datasets" ,"DBI" ,"dbplyr" ,"desc" ,"devtools" ,"digest" ,"dplyr" ,"DT" ,"ellipsis" ,"evaluate" ,"fansi" ,"farver" ,"fastmap" ,"forcats" ,"foreign" ,"fs" ,"generics" ,"ggplot2" ,"gh" ,"git2r" ,"glue" ,"graphics" ,"grDevices" ,"grid" ,"gtable" ,"haven" ,"highr" ,"hms" ,"htmltools" ,"htmlwidgets" ,"httpuv" ,"httr" ,"ini" ,"jsonlite" ,"KernSmooth" ,"knitr" ,"labeling" ,"later" ,"lattice" ,"lazyeval" ,"lifecycle" ,"lubridate" ,"magrittr" ,"markdown" ,"MASS" ,"Matrix" ,"memoise" ,"methods" ,"mgcv" ,"mime" ,"modelr" ,"munsell" ,"nlme" ,"nnet" ,"openssl" ,"packrat" ,"parallel" ,"PerformanceAnalytics" ,"pillar" ,"pkgbuild" ,"pkgconfig" ,"pkgload" ,"plogr" ,"plyr" ,"praise" ,"prettyunits" ,"processx" ,"progress" ,"promises" ,"ps" ,"purrr" ,"quadprog" ,"R6" ,"rcmdcheck" ,"RColorBrewer" ,"Rcpp" ,"RCurl" ,"readr" ,"readxl" ,"rematch" ,"remotes" ,"reprex" ,"reshape2" ,"rex" ,"rlang" ,"rmarkdown" ,"roxygen2" ,"rpart" ,"rprojroot" ,"rsconnect" ,"rstudioapi" ,"rversions" ,"rvest" ,"scales" ,"selectr" ,"sessioninfo" ,"shiny" ,"sourcetools" ,"spatial" ,"splines" ,"stats" ,"stats4" ,"stringi" ,"stringr" ,"survival" ,"sys" ,"tcltk" ,"testthat" ,"tibble" ,"tidyr" ,"tidyselect" ,"tidyverse" ,"tinytex" ,"tools" ,"translations" ,"usethis" ,"utf8" ,"utils" ,"vctrs" ,"viridisLite" ,"whisker" ,"withr" ,"xfun" ,"xml2" ,"xopen" ,"xtable" ,"xts" ,"yaml" ,"zeallot")
setdiff(packages_installed,rownames(installed.packages())
packages_installed
setdiff(rownames(installed.packages(),packages_installed)
s
rownames(installed.packages())
setdiff(packages_installed,rownames(installed.packages()))
setdiff(rownames(installed.packages()),packages_installed)
packages_to_install <- setdiff(rownames(installed.packages()),packages_installed)
packages_to_install
if (length(packages_to_install) > 0) {
install.packages(packages_to_install)
}
